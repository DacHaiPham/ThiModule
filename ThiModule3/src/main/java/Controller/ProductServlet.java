package Controller;

import Model.Product;
import Service.ProductService;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.util.List;

@WebServlet({"/products", "/"})
public class ProductServlet extends HttpServlet {
    private ProductService productService = new ProductService();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("UTF-8");
        response.setCharacterEncoding("UTF-8");
        String action = request.getParameter("action");

        if ("add".equals(action)) {
            request.getRequestDispatcher("/WEB-INF/addProduct.jsp").forward(request, response);
        } else if ("delete".equals(action)) {
            int id = Integer.parseInt(request.getParameter("id"));
            productService.hideProduct(id); // ·∫®n s·∫£n ph·∫©m thay v√¨ x√≥a

            // L∆∞u th√¥ng b√°o v√†o session
            HttpSession session = request.getSession();
            session.setAttribute("successMessage", "üìå S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!");

            response.sendRedirect("products"); // Chuy·ªÉn h∆∞·ªõng l·∫°i trang danh s√°ch
        } else if ("success".equals(action)) { // üÜï X·ª≠ l√Ω khi th√™m s·∫£n ph·∫©m th√†nh c√¥ng
            HttpSession session = request.getSession();
            session.setAttribute("successMessage", "‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
            response.sendRedirect("products");
        } else {
            // Load danh s√°ch s·∫£n ph·∫©m t·ª´ database
            List<Product> productList = productService.getAllProducts();
            request.setAttribute("products", productList);

            // Ki·ªÉm tra session c√≥ th√¥ng b√°o kh√¥ng
            HttpSession session = request.getSession();
            String successMessage = (String) session.getAttribute("successMessage");
            String errorMessage = (String) session.getAttribute("errorMessage");

            if (successMessage != null) {
                request.setAttribute("successMessage", successMessage);
                session.removeAttribute("successMessage"); // X√≥a th√¥ng b√°o sau khi hi·ªÉn th·ªã
            }
            if (errorMessage != null) {
                request.setAttribute("errorMessage", errorMessage);
                session.removeAttribute("errorMessage"); // X√≥a th√¥ng b√°o sau khi hi·ªÉn th·ªã
            }

            request.getRequestDispatcher("/WEB-INF/managementProduct.jsp").forward(request, response);
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("UTF-8");
        response.setCharacterEncoding("UTF-8");
        HttpSession session = request.getSession();

        try {
            // L·∫•y d·ªØ li·ªáu t·ª´ request
            String name = request.getParameter("name");
            String priceStr = request.getParameter("price");
            String quantityStr = request.getParameter("quantity");
            String color = request.getParameter("color");
            String description = request.getParameter("description");
            String category = request.getParameter("category");

            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
            if (name.isEmpty() || priceStr.isEmpty() || quantityStr.isEmpty() || color.isEmpty() || category.isEmpty()) {
                session.setAttribute("errorMessage", "‚ö† Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin s·∫£n ph·∫©m!");
                response.sendRedirect("products?action=add");
                return;
            }

            double price = Double.parseDouble(priceStr);
            int quantity = Integer.parseInt(quantityStr);

            // T·∫°o s·∫£n ph·∫©m m·ªõi
            Product newProduct = new Product(0, name, price, quantity, color, description, category);
             productService.addProduct(newProduct);
            response.sendRedirect("products");
        } catch (NumberFormatException e) {
            session.setAttribute("errorMessage", "‚ö† Gi√° ti·ªÅn v√† s·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë h·ª£p l·ªá!");
            response.sendRedirect("products?action=add");
        }
    }

}
